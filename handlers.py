# handlers.py
from aiogram import types, Router
from aiogram.filters import CommandStart
from aiogram.types import FSInputFile
from keyboards import (
    main_menu_keyboard,
    order_menu_keyboard,
    assortment_menu_keyboard,
    about_us_menu_keyboard,
    faq_menu_keyboard,
    countries_keyboard,
    cities_keyboard,
)
from config import OPERATOR_CHAT_ID
from db import get_cities_by_country, get_tariffs_by_city_and_country

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä
router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(CommandStart())
async def start(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=main_menu_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏
@router.callback_query()
async def handle_callback_query(callback_query: types.CallbackQuery):
    if callback_query.data == "order_menu":
        await callback_query.message.edit_text("–ú–µ–Ω—é '–ó–∞–∫–∞–∑–∞—Ç—å'", reply_markup=order_menu_keyboard())
    elif callback_query.data == "contact_operator":
        await callback_query.bot.send_message(OPERATOR_CHAT_ID, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback_query.message.chat.id} —Ö–æ—á–µ—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏")
        await callback_query.message.edit_text("–°–µ–π—á–∞—Å —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä")
    elif callback_query.data == "assortment_menu":
        await callback_query.message.edit_text("–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º:", reply_markup=assortment_menu_keyboard())
    elif callback_query.data == "about_us_menu":
        await callback_query.message.edit_text("–û –Ω–∞—Å", reply_markup=about_us_menu_keyboard())
    elif callback_query.data == "faq_menu":
        await callback_query.message.edit_text("–û—Ç–≤–µ—Ç—ã –∏ –í–æ–ø—Ä–æ—Å—ã", reply_markup=faq_menu_keyboard())
    elif callback_query.data == "order_conditions":
        text = """
        –£—Å–ª–æ–≤–∏—è –∑–∞–∫–∞–∑–∞ / –∫–æ–º–∏—Å—Å–∏—è –∑–∞ —É—Å–ª—É–≥–∏:
        (–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–±–æ—Ä)

        –ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ —Å—É–º–º–µ, –æ—Ç 1-—É–ø–∞–∫–æ–≤–æ–∫ (–ª–∏–Ω–∏–µ–π)

        –î–æ $99 - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è 600 —Å–æ–º

        –û—Ç $140 - 6% –æ—Ç —Å—É–º–º—ã –ø–µ—Ä–µ–≤–æ–¥–∞ (–Ω–µ –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫ - –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è)

        –û—Ç $999 - —Ç–æ—Ä–≥—É–µ–º–æ (—É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞) ü§ù

        –í—ã—à–µ $1999 - –Ω–∞ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –Ω–∏–∂–Ω–∏—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ü–µ–Ω ü•≥

        –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –°–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç—å –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –∏ –≤—ã–∫—É–ø–ª–µ–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, –¥–æ –º–æ–º–µ–Ω—Ç–∞ —Å–¥–∞—á–∏ –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫—É (–µ—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º) –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ–ª–ª–µ–∫—Ç–∏–≤–æ–º (–∫–æ–º–∞–Ω–¥–∞ –∏–∑ –±–æ–ª–µ–µ 200 —á–µ–ª–æ–≤–µ–∫) –§—ç—à–Ω –†—ã–Ω–æ–∫ - —Ç–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–≤–æ–¥–∞ / –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ —Ä–∞–±–æ—á–µ–º —á–∞—Ç–µ –∑–∞–∫–∞–∑—á–∏–∫–∞ (WhatsApp & Telegram) –≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–∏ –Ω–æ–º–µ—Ä–∞ wa.me/996500996500, wa.me/996501996501, @marketplacekg, @marketplace_kg

        –û—Ç 10.12.2024 ¬©Ô∏è –õ–∏–¥–µ—Ä –∫–æ–º–∞–Ω–¥—ã - –ö–∞–π—Ä–∞—Ç –ú.–ú.
        """
        await callback_query.message.answer(text, reply_markup=main_menu_keyboard())#–∏–∑–º–µ–Ω–µ–Ω–æ
    elif callback_query.data == "delivery":
        await callback_query.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É:", reply_markup=countries_keyboard())
    elif callback_query.data.startswith("country_"):
        country = callback_query.data.split("_")[1]
        cities = get_cities_by_country(country)
        if cities:
            await callback_query.message.edit_text(f"–ì–æ—Ä–æ–¥–∞ {country}:", reply_markup=cities_keyboard(country))
        else:
            await callback_query.message.edit_text(f"–í —Å—Ç—Ä–∞–Ω–µ {country} –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤.")
    elif callback_query.data.startswith("city_"):#–∏–∑–º–µ–Ω–µ–Ω–æ
        city = callback_query.data.split("_")[1] #–∏–∑–º–µ–Ω–µ–Ω–æ
        country = callback_query.data.split("_")[2]#–∏–∑–º–µ–Ω–µ–Ω–æ
        delivery_info = get_cities_by_country(country)
        tariffs = get_tariffs_by_city_and_country(country, city)
        for city_db, delivery_time in delivery_info:
            if city_db == city:
                text = f"–î–æ—Å—Ç–∞–≤–∫–∞ –≤ –≥–æ—Ä–æ–¥ {city}: {delivery_time}\n\n–¢–∞—Ä–∏—Ñ—ã:\n"
                for service, price, unit in tariffs:
                    text += f"{service}: {price} {unit}\n"
                await callback_query.message.edit_text(text)
        await callback_query.message.answer("–ú–µ–Ω—é '–ó–∞–∫–∞–∑–∞—Ç—å'", reply_markup=order_menu_keyboard())
    elif callback_query.data == "dogovor_about" or callback_query.data == "dogovor_faq":
        await callback_query.message.edit_text("–ó–∞–≥—Ä—É–∂–∞—é –¥–æ–≥–æ–≤–æ—Ä...")

        file_path = "C:/Users/SenetUser/Downloads/bot-beka/dogovor_final_corrected_v2.pdf"  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ñ–∞–π–ª—É
        file = FSInputFile(file_path) # –í–æ—Ç —Ç—É—Ç –∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
        await callback_query.message.answer_document(file)# –í–æ—Ç —Ç—É—Ç –∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ
        await callback_query.message.edit_text("–î–æ–≥–æ–≤–æ—Ä –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è") # –ü–æ–º–µ–Ω—è–ª —Å–æ–æ–±—â–µ–Ω–∏–µ
        await callback_query.message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu_keyboard())



    
    elif callback_query.data == "back":
        if callback_query.message.text == "–ú–µ–Ω—é '–ó–∞–∫–∞–∑–∞—Ç—å'" or callback_query.message.text == "–û –Ω–∞—Å" or callback_query.message.text == "–û—Ç–≤–µ—Ç—ã –∏ –í–æ–ø—Ä–æ—Å—ã":
            await callback_query.message.edit_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu_keyboard())
        elif callback_query.message.text == "–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º:":
            await callback_query.message.edit_text("–ú–µ–Ω—é '–ó–∞–∫–∞–∑–∞—Ç—å'", reply_markup=order_menu_keyboard())
        elif callback_query.message.text.startswith("–ì–æ—Ä–æ–¥–∞"):
            await callback_query.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É:", reply_markup=countries_keyboard())
        elif callback_query.message.text == "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É:":
            await callback_query.message.edit_text("–û—Ç–≤–µ—Ç—ã –∏ –í–æ–ø—Ä–æ—Å—ã", reply_markup=faq_menu_keyboard())
        else:
            await callback_query.message.edit_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu_keyboard())

    elif callback_query.data == "main_menu":
      await callback_query.message.edit_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu_keyboard())
    else:
        await callback_query.message.edit_text("–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
